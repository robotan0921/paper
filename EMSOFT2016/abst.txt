contri 1 : mruby on TECSでのソフトウェア開発の作業効率を向上させる
contri 2 : 効率的に複数のmrubyプログラムを並行/並列動作させる

conclusion 1 : バイトコードローダによって作業効率が向上する
conclusion 2 : 使いずらかったマルチタスク処理が実用的になった
（conclusion 3 : コンポーネントとして実装したので，機能のつけ外しが簡単になっている）

アピールポイント
    BLuetooth Loaderによる効率的な開発が可能になる
        -OSの再起動が必要ない，SDカードの抜き差しも一度だけ
        -（プラットフォームの起動時間）
          転送するバイトコードのサイズ，ロード処理時間

          SDカードーー｜まとめてーーアプリだけ
            コンパイル時間
          連続ロード　
            抜き差し      OSの再起動，ペアリング

    既存のフレームワークより使いやすいマルチタスク処理
        コルーチンより使いやすい，速い
        オーバヘッドが少ない
            シングル,コルーチン,マルチのアプリケーションの実行時間の比較
            周期時間によるオーバヘッドの比較
        イベントフラグを使ったアプリケーションの同期
            周期時間×（VMの数-1）以内

    コンポーネントの利点を生かした設計
        周期ハンドラなどの機能の取り外し、再利用が容易
            カーネル設定ファイルCFGを書かなければならない.
        イベントフラグでは，VMの数にかかわらずCファイルの使いまわしができる
            （コード変更行数）
            
TODO:
    プラットフォーム起動時間測定
    アプリケーションの同期の評価
    コード変更行数
    Loaderのapp_buf部分（属性として持たせる）



